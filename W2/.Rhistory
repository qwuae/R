subset(dths, Intent=="Homicide" & Gender=="Female" & Age=="None selected" & Race=="None selected" )
subset(dths, Intent=="Homicide" & Gender=="Female" & Age=="Under 15" & Race=="White")
subset(dths, Intent=="None selected" & Gender=="None selected" & Age=="None selected" & Race=="None selected")
mxdths <- max( dths$Deaths )
wdth <- 200
hght <- mxdths / wdth
colgn1 <- c("lightsteelblue3")
plot(0, 0, type='n', ann=F,
xlim=c(0,wdth), ylim=c(0,hght))
rect(0, 0, 0.5, 0.5, border=F, col=colgn1 ) # this code won't run! we haven't specified x and y yet
for( i in 1:mxdths){
rect(0, 0, 0.5, 0.5, border=F, col=colgn1 ) # this won't run either
}
x=0; y=0
for( i in 1:mxdths){
y=y+1
rect(x, y, x+0.7, y+0.7, border=F, col=colgn1 )
}
if( y>=hght ){
x = x+1    # increase the x value by 1
y = 0      # and reset the y value
}
colgn1 <- c("lightsteelblue3")
plot(0, 0, type='n', ann=F,
xlim=c(0,wdth), ylim=c(0,hght))
x=0; y=0
for( i in 1:mxdths){
y=y+1
rect(x, y, x+0.5, y+0.5, border=F, col=colgn1 )
if( y>=hght ){
x = x+1
y = 0
}
}
colgn2 <- c("violetred2")
HoFeU15Wh <- subset(dths, Intent=="Homicide" & Gender=="Female" & Age=="Under 15" & Race=="White")
HoFeU15Wh$Deaths
x=0; y=0
for( i in 1:HoFeU15Wh$Deaths){
y=y+1
rect(x, y, x+0.7, y+0.7, border=F, col=colgn2 )
if( y>=hght ){
x = x+1
y = 0
}
}
sqrt(HoFeU15Wh$Deaths)
floor( sqrt(HoFeU15Wh$Deaths) )
sbst.wdth <- floor( sqrt(HoFeU15Wh$Deaths) )
colgn1 <- c("lightsteelblue3")
colgn2 <- c("violetred2")
plot(0, 0, type='n', ann=F,
xlim=c(0,wdth), ylim=c(0,hght))
x=0; y=0
for( i in 1:mxdths){
y=y+1
rect(x, y, x+0.5, y+0.5, border=F, col=colgn1 )
if( y>=hght ){
x = x+1
y = 0
}
}
HoFeU15Wh <- subset(dths, Intent=="Homicide" & Gender=="Female" & Age=="Under 15" & Race=="White")
HoFeU15Wh$Deaths
x=0; y=0
sbst.wdth <- floor( sqrt(HoFeU15Wh$Deaths) )
for( i in 1:HoFeU15Wh$Deaths){
y=y+1
rect(x, y, x+0.5, y+0.5, border=F, col=colgn2 )
if( y>=sbst.wdth ){       # substituting 'wdth' for 'sbst.wdth'
x = x+1
y = 0
}
}
require(devtools)
install_github("ropensci/rWBclimate")
require(rWBclimate)
cntrys <- c( "GBR" )
tmps <- get_historical_temp(cntrys, "year")
summary(tmps)
head(tmps)
plot( tmps$year, tmps$data, type='l' )
plot( tmps$year, tmps$data, type='n' )
polygon( c(tmps$year, 2012, 1901), c(tmps$data, 0, 0),
col="slateblue1", border=F)
Npnts <- length( tmps$year )
pstns <-  seq(0, 2*pi, l=Npnts)
Yps <- sin(pstns)
Xps <- cos(pstns)
plot(Xps, Yps)
polygon(Xps, Yps, col="hotpink")
segments(Xps, Yps, 0,0, lwd=0.2)
polygon( 0.5*Xps, 0.5*Yps, col="blue")
segments( 0.5*Xps, 0.5*Yps, 0,0, lwd=0.2, col="white")
tmps$data01 <- tmps$data - min(tmps$data)
tmps$data01 <- tmps$data01 / max(tmps$data01)
summary(tmps)
head(tmps)
plot( tmps$year, tmps$data01, type='l' )
Xps1 <- Xps * tmps$data01
Yps1 <- Yps * tmps$data01
plot( Xps1, Yps1 )
polygon(Xps1, Yps1, col="hotpink")
segments(Xps1, Yps1, 0,0, lwd=0.2)
text(Xps1, Yps1, labels = tmps$year)
Yps2 <- Yps + tmps$data01 # remember, yps is our circle and tmps is our climate data
plot( Xps, Yps, ylim=c(-1,1.6), xlim=c(-1,1) ) # this just plots our circle
segments(Xps, Yps, Xps, Yps2, lwd=0.2)
lines(Xps, Yps)
lines( Xps, Yps2)
Yps3 <- 0.5*Yps
Yps4 <- 0.5*Yps + tmps$data01
plot( Xps, Yps3 , xlim=c(-1, 1), ylim=c(-0.5,1.5), type='n')
segments(Xps, Yps3, Xps, Yps4, lwd=0.2)
lines(Xps, Yps3)
lines( Xps, Yps4)
plot( Xps, Yps3 , xlim=c(-1, 1), ylim=c(-0.5,1.5), type='n')
segments(Xps, Yps3, Xps, Yps4, lwd= tmps$data01*4)
plot( Xps, Yps3 , xlim=c(-1, 1), ylim=c(-0.5,1.5), type='n')
segments(Xps, Yps3, Xps, Yps4)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ), col="gold" )
}
lines( Xps, Yps4)
pstns <-  seq(0, 2*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
Yps4 <- 0.5*Yps + tmps$data01
plot( Xps, Yps3 , xlim=c(-1, 1), ylim=c(-0.5,1.5), type='n')
lines(Xps, Yps3)
segments(Xps, Yps3, Xps, Yps4)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ), col="gold" )
}
lines( Xps, Yps4)
cntrys <- c( "GBR", "CHN", "BRA" , "FIN")
tmps <- get_historical_temp(cntrys, "year")
par(mfrow=c(2,2))
for( i in 1:4 ){
dt <- tmps[ tmps$locator ==cntrys[i], ]
plot( dt$year, dt$data , type='l', xlim=c(1900,2020), ylim=c(-5, 30))
}
par(mfrow=c(2,2))
par(mar=c(0,0,0,0))
for( i in 1:4){
pstns <-  seq(0.95*pi, 0.25*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
dt <- tmps[ tmps$locator ==cntrys[i], ]
dt$data01 <- dt$data - min(dt$data)
dt$data01 <- dt$data01 / max(dt$data01)
Yps4 <- 0.8*Yps + dt$data01
plot( Xps, Yps3 , xlim=c(-1.2, 1), ylim=c(0,2), type='n', ann=F, axes=F)
text( -1, 1.7, labels = cntrys[i], col ="grey60", adj=0.2, cex=2)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ),
col="hotpink" , border=F)
if(i%%10==0){
segments(Xps[i], Yps3[i], Xps[i], Yps4[i],
lwd= 2, col="grey60")
if(dt$year[i]>1950){
text(Xps[i], Yps3[i], labels = dt$year[i],
pos = 1, col="grey60", cex=0.5, las=2)
}
}
}
segments(Xps, Yps3, Xps, 0.95*Yps3, lwd=0.5, col="grey60")
text(Xps[1], Yps3[1], labels = dt$year[1], pos = 2, col="grey60")
text(Xps[Npnts], Yps3[Npnts], labels = dt$year[Npnts], pos = 4, col="grey60")
}
for( i in 1:4){
pstns <-  seq(0.95*pi, 0.25*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
dt <- tmps[ tmps$locator ==cntrys[i], ]
dt$data01 <- dt$data - min(dt$data)
dt$data01 <- dt$data01 / max(dt$data01)
Yps4 <- 0.8*Yps + dt$data01
plot( Xps, Yps3 , xlim=c(-1.2, 1), ylim=c(0,2), type='n', ann=F, axes=F)
text( -1, 1.7, labels = cntrys[i], col ="grey60", adj=0.2, cex=2)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ),
col="hotpink" , border=F)
if(i%%10==0){
segments(Xps[i], Yps3[i], Xps[i], Yps4[i],
lwd= 2, col="grey60")
if(dt$year[i]>1950){
text(Xps[i], Yps3[i], labels = dt$year[i],
pos = 1, col="grey60", cex=0.5, las=2)
}
}
}
segments(Xps, Yps3, Xps, 0.95*Yps3, lwd=0.5, col="grey60")
text(Xps[1], Yps3[1], labels = dt$year[1], pos = 2, col="grey60")
text(Xps[Npnts], Yps3[Npnts], labels = dt$year[Npnts], pos = 4, col="grey60")
}
for( i in 1:4){
pstns <-  seq(0.95*pi, 0.25*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
dt <- tmps[ tmps$locator ==cntrys[i], ]
dt$data01 <- dt$data - min(dt$data)
dt$data01 <- dt$data01 / max(dt$data01)
Yps4 <- 0.8*Yps + dt$data01
plot( Xps, Yps3 , xlim=c(-1.2, 1), ylim=c(0,2), type='n', ann=F, axes=F)
text( -1, 1.7, labels = cntrys[i], col ="grey60", adj=0.2, cex=2)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ),
col="hotpink" , border=F)
if(i%%10==0){
segments(Xps[i], Yps3[i], Xps[i], Yps4[i],
lwd= 2, col="grey60")
if(dt$year[i]>1950){
text(Xps[i], Yps3[i], labels = dt$year[i],
pos = 1, col="grey60", cex=0.5, las=2)
}
}
}
segments(Xps, Yps3, Xps, 0.95*Yps3, lwd=0.5, col="grey60")
text(Xps[1], Yps3[1], labels = dt$year[1], pos = 2, col="grey60")
text(Xps[Npnts], Yps3[Npnts], labels = dt$year[Npnts], pos = 4, col="grey60")
}
for( i in 1:4){
pstns <-  seq(0.95*pi, 0.25*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
dt <- tmps[ tmps$locator ==cntrys[i], ]
dt$data01 <- dt$data - min(dt$data)
dt$data01 <- dt$data01 / max(dt$data01)
Yps4 <- 0.8*Yps + dt$data01
plot( Xps, Yps3 , xlim=c(-1.2, 1), ylim=c(0,2), type='n', ann=F, axes=F)
text( -1, 1.7, labels = cntrys[i], col ="grey60", adj=0.2, cex=2)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ),
col="hotpink" , border=F)
if(i%%10==0){
segments(Xps[i], Yps3[i], Xps[i], Yps4[i],
lwd= 2, col="grey60")
if(dt$year[i]>1950){
text(Xps[i], Yps3[i], labels = dt$year[i],
pos = 1, col="grey60", cex=0.5, las=2)
}
}
}
segments(Xps, Yps3, Xps, 0.95*Yps3, lwd=0.5, col="grey60")
text(Xps[1], Yps3[1], labels = dt$year[1], pos = 2, col="grey60")
text(Xps[Npnts], Yps3[Npnts], labels = dt$year[Npnts], pos = 4, col="grey60")
}
for( i in 1:4){
pstns <-  seq(0.95*pi, 0.25*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
dt <- tmps[ tmps$locator ==cntrys[i], ]
dt$data01 <- dt$data - min(dt$data)
dt$data01 <- dt$data01 / max(dt$data01)
Yps4 <- 0.8*Yps + dt$data01
plot( Xps, Yps3 , xlim=c(-1.2, 1), ylim=c(0,2), type='n', ann=F, axes=F)
text( -1, 1.7, labels = cntrys[i], col ="grey60", adj=0.2, cex=2)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ),
col="hotpink" , border=F)
if(i%%10==0){
segments(Xps[i], Yps3[i], Xps[i], Yps4[i],
lwd= 2, col="grey60")
if(dt$year[i]>1950){
text(Xps[i], Yps3[i], labels = dt$year[i],
pos = 1, col="grey60", cex=0.5, las=2)
}
}
}
segments(Xps, Yps3, Xps, 0.95*Yps3, lwd=0.5, col="grey60")
text(Xps[1], Yps3[1], labels = dt$year[1], pos = 2, col="grey60")
text(Xps[Npnts], Yps3[Npnts], labels = dt$year[Npnts], pos = 4, col="grey60")
}
for( i in 1:4){
pstns <-  seq(0.95*pi, 0.25*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
dt <- tmps[ tmps$locator ==cntrys[i], ]
dt$data01 <- dt$data - min(dt$data)
dt$data01 <- dt$data01 / max(dt$data01)
Yps4 <- 0.8*Yps + dt$data01
plot( Xps, Yps3 , xlim=c(-1.2, 1), ylim=c(0,2), type='n', ann=F, axes=F)
text( -1, 1.7, labels = cntrys[i], col ="grey60", adj=0.2, cex=2)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ),
col="hotpink" , border=F)
if(i%%10==0){
segments(Xps[i], Yps3[i], Xps[i], Yps4[i],
lwd= 2, col="grey60")
if(dt$year[i]>1950){
text(Xps[i], Yps3[i], labels = dt$year[i],
pos = 1, col="grey60", cex=0.5, las=2)
}
}
}
segments(Xps, Yps3, Xps, 0.95*Yps3, lwd=0.5, col="grey60")
text(Xps[1], Yps3[1], labels = dt$year[1], pos = 2, col="grey60")
text(Xps[Npnts], Yps3[Npnts], labels = dt$year[Npnts], pos = 4, col="grey60")
}
for( i in 1:4){
pstns <-  seq(0.95*pi, 0.25*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
dt <- tmps[ tmps$locator ==cntrys[i], ]
dt$data01 <- dt$data - min(dt$data)
dt$data01 <- dt$data01 / max(dt$data01)
Yps4 <- 0.8*Yps + dt$data01
plot( Xps, Yps3 , xlim=c(-1.2, 1), ylim=c(0,2), type='n', ann=F, axes=F)
text( -1, 1.7, labels = cntrys[i], col ="grey60", adj=0.2, cex=2)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ),
col="hotpink" , border=F)
if(i%%10==0){
segments(Xps[i], Yps3[i], Xps[i], Yps4[i],
lwd= 2, col="grey60")
if(dt$year[i]>1950){
text(Xps[i], Yps3[i], labels = dt$year[i],
pos = 1, col="grey60", cex=0.5, las=2)
}
}
}
segments(Xps, Yps3, Xps, 0.95*Yps3, lwd=0.5, col="grey60")
text(Xps[1], Yps3[1], labels = dt$year[1], pos = 2, col="grey60")
text(Xps[Npnts], Yps3[Npnts], labels = dt$year[Npnts], pos = 4, col="grey60")
}
for( i in 1:4){
pstns <-  seq(0.95*pi, 0.25*pi, l=Npnts) # create a sequence for each position
Yps <- sin(pstns)
Xps <- cos(pstns)
Yps3 <- 0.5*Yps
dt <- tmps[ tmps$locator ==cntrys[i], ]
dt$data01 <- dt$data - min(dt$data)
dt$data01 <- dt$data01 / max(dt$data01)
Yps4 <- 0.8*Yps + dt$data01
plot( Xps, Yps3 , xlim=c(-1.2, 1), ylim=c(0,2), type='n', ann=F, axes=F)
text( -1, 1.7, labels = cntrys[i], col ="grey60", adj=0.2, cex=2)
lines(Xps, Yps3)
for(i in 2:Npnts){
polygon( c( Xps[i-1],  Xps[i-1],   Xps[i],  Xps[i]  ),
c( Yps3[i-1], Yps4[i-1], Yps4[i], Yps3[i] ),
col="hotpink" , border=F)
if(i%%10==0){
segments(Xps[i], Yps3[i], Xps[i], Yps4[i],
lwd= 2, col="grey60")
if(dt$year[i]>1950){
text(Xps[i], Yps3[i], labels = dt$year[i],
pos = 1, col="grey60", cex=0.5, las=2)
}
}
}
segments(Xps, Yps3, Xps, 0.95*Yps3, lwd=0.5, col="grey60")
text(Xps[1], Yps3[1], labels = dt$year[1], pos = 2, col="grey60")
text(Xps[Npnts], Yps3[Npnts], labels = dt$year[Npnts], pos = 4, col="grey60")
}
x <- 1:4
z1 <- c(5.1, 5.4, 6.1, 5.2)
z2 <- z1 * 10
par(mfrow=c(1,2))
plot(x, z1, type="l")
plot(x, z2, type="l")
plot(z2, type="l", ylim=c(0, 70))
lines(z1, col="hotpink", lwd=2)
colr <- c("lightgrey")
par( fig=c(0, 0.4, 0, 1 ))
par(mar=c(5, 4, 2, 0) + 0.1)
plot(z1, type="l", ylim=c(0, max(z1)), xlab="", ylab="")
rect( 1, 0, 4, 6.2 , col=colr, border=F)
lines( z1 , col="hotpink", lwd=2)
par( fig=c(0.6, 1, 0, 1 ), new=T)
par(mar=c(5, 0, 2, 4) + 0.1)
plot(z2, type="l", ylim=c(0, max(z2)), xlab="", ylab="", axes=F)
rect( 0, 0, 4, 6.2 , col=colr, border=F)
lines( z1 , col="hotpink", lwd=2)
axis(1)
axis(4)
box()
par( fig=c(0.4, 0.6, 0, 1 ), new=T)
par(mar=c(5, 0, 2, 0) )
plot(z2, type="n", ylim=c(0, max(z2)), xlim=c(0,1),
xlab="", ylab="", axes=F, xaxs='i')
xp <- c(0, 1, 1, 0)
yp <- c( max(z2), max(z1), 0, 0)
polygon(xp, yp, col=colr, border=F)
colpg <- rgb(230,246,245, maxColorValue=255 ) # colour of the polygon and rect's
colax <-rgb(0,163,157, maxColorValue=255 )  # colour of the axes and box
colax2 <-colax # colour of large range axes
colsg <- c("white") # colour of gridline segments
colz1 <- rgb(240,75,52, maxColorValue=255 ) # colour of data z1
colz2 <- rgb(0,112,106, maxColorValue=255 ) # colour data z2
colax3 <-colz1 # colour of small range axis
par( fig=c(0.4, 0.6, 0, 1 ))
par(mar=c(5, 0, 4, 0) )
plot(z2, type="n", ylim=c(0, max(z2)), xlim=c(0,4),
xlab="", ylab="", axes=F, xaxs='i', yaxs='i')
xp <- c(0, 4, 4, 0)
yp <- c(max(z1), max(z2), 0, 0) # get the range of the data for the polygon
polygon(xp, yp, col=colpg, border=F) # add the polygon
for(i in 1:5) segments(0,i,4,i*10, col=colsg) # add the gridline segments
par( fig=c(0, 0.4, 0, 1 ), new=T)
par(mar=c(5, 4, 2, 0) + 0.1)
plot(z2, type="n", ylim=c(0, max(z2)),
xlab="", ylab="", axes=F, xaxs='i', yaxs='i')
rect( 0, 0, 4, 6.2 , col=colpg, border=F)
lines( z1 , col=colz1, lwd=1) # add both sets of data as lines
lines( z2 , col=colz2, lwd=3) # teh sencod data is is thicker to emphasise the zoom effect
axis(1, at=1:4, col=colax, col.axis=colax ) # x axis is simple 1,2,3,4
axis(2, at=seq(10,60, by=10), col.axis=colax2, col=colax2 ) # first y axis is lighter
box( col= colax )
axis(2, at= 0:6, font=2, las=2, cex.axis=0.5, col=colax3, col.axis=colax3, lwd=1.9) # second y axis is darker and smaller
for(i in 1:5) segments(0,i,5,i, col=colsg)
par( fig=c(0.6, 1, 0, 1 ), new=T)
par(mar=c(5, 0, 4, 4) + 0.1) # we've shrunk the plot slightly to emphasise the differnt scale
plot(z1, type="n", ylim=c(0, max(z1)),
xlab="", ylab="", axes=F, xaxs='i', yaxs='i')
rect( 1, 0, 4, 6.2 , col=colpg, border=F)
lines( z1 , col=colz1, lwd=3)
axis(1, at=1:4, col=colax, col.axis=colax)
box( col= colax )
axis(4, at=0:6, font=2, las=2, col=colax3, col.axis=colax3, lwd=1.9 ) # y axis is darker and slightly thicker
for(i in 1:5) segments(0,i,5,i, col=colsg)
for(i in 1:5) segments(0,i,5,i, col=colsg)
for(i in 1:5) segments(0,i,5,i, col=colsg)
for(i in 1:5) segments(0,i,5,i, col=colsg)
for(i in 1:5) segments(0,i,5,i, col=colsg)
for(i in 1:5) segments(0,i,5,i, col=colsg)
for(i in 1:5) segments(0,i,5,i, col=colsg)
for(i in 1:5) segments(0,i,5,i, col=colsg)
setwd( "/Users/fanglanshu/Desktop/Visualisation/Lab/W2" )
d12 <- read.csv("datasaurus.csv")
star <- d12[ d12$dataset=="star", ]
dino<- d12[ d12$dataset=="dino", ]
bull<- d12[ d12$dataset=="bullseye", ]
par( fig=c(0, 0.4, 0, 1 ))
plot( star$x, star$y )
par( fig=c(0.6, 1, 0, 1 ), new=TRUE)
plot( dino$x, dino$y )
par( fig=c(0, 0.4, 0, 0.4 ))
plot( star$x, star$y )
par( fig=c(0.4, 1, 0, 1 ), new=T)
plot( dino$x, dino$y )
par( fig=c(0.2, 0.7, 0, 0.6 ), new=T)
plot( bull$x, bull$y )
par(mar=c(5,4,0,1))
par( fig=c(0.2, 0.8, 0.1, 0.3 ))
plot( star$x, star$y )
par( fig=c(0.2, 0.8, 0.4, 0.6 ), new=T)
plot( dino$x, dino$y )
par( fig=c(0.2, 0.6, 0.7, 0.9 ), new=T)
plot( bull$x, bull$y )
par( fig=c(0.2, 0.8, 0.1, 0.3 ), bg="lightblue")
plot( star$x, star$y )
par( fig=c(0.2, 0.8, 0.4, 0.6 ), new=T, bg="hotpink")
plot( dino$x, dino$y )
par( fig=c(0.2, 0.6, 0.7, 0.9 ), new=T)
plot( bull$x, bull$y )
par( fig=c(0, 1, 0, 1 ), bg="grey90")
par(mar=c(0,0,0,0))
par( fig=c(0, 1, 0, 1 ), bg="grey90")
par(mar=c(0,0,0,0))
par( mfrow=c(2,2) )
plot( dino$x, dino$y )
hist( dino$y )
hist( dino$x )
?hist
par( fig=c(0,0.7,0.7,1) , new=T)
hist( dino$x )
par( fig=c(0.7,1,0,0.7), new=T )
hist( dino$y )
bnsz = 5 # a variable to determine the bin size
xhist <- hist( dino$x, plot=F, breaks=seq(20,100,by=bnsz) ) # saving the hist object
yhist <- hist( dino$y, plot=F, breaks=seq(0,100,by=bnsz) )
yhist <- hist( dino$y, plot=T, breaks=seq(0,100,by=bnsz) )
xhist <- hist( dino$x, plot=T, breaks=seq(20,100,by=bnsz) ) # saving the hist object
yhist <- hist( dino$y, plot=T, breaks=seq(0,100,by=bnsz) )
par( fig=c(0,0.7,0,.7) )
plot( dino$x, dino$y )
par( fig=c(0,0.7,0.7,1) , new=T)
barplot( xhist$counts)
par( fig=c(0.7,1,0,0.7), new=T )
barplot( yhist$counts ,  horiz=T )
x <- 1:4
z1 <- c(5.1, 5.4, 6.1, 5.2)
z2 <- z1 * 10
par(mfrow=c(1,2))
plot(x, z1, type="l")
plot(x, z2, type="l")
